--- Computer.java
+++ Computer.java
@@ -39,12 +39,11 @@
     private final IComputerEnvironment environment;
     private final Terminal terminal;
     private final ComputerExecutor executor;
-    private final MainThreadExecutor serverExecutor;
 
     // Additional state about the computer and its environment.
     private boolean blinking = false;
     private final Environment internalEnvironment = new Environment( this );
-    private final AtomicBoolean externalOutputChanged = new AtomicBoolean();
+    private boolean externalOutputChanged = false;
 
     private boolean startRequested;
     private int ticksSinceStart = -1;
@@ -56,7 +55,6 @@
         this.terminal = terminal;
 
         executor = new ComputerExecutor( this );
-        serverExecutor = new MainThreadExecutor( this );
     }
 
     IComputerEnvironment getComputerEnvironment()
@@ -114,20 +112,22 @@
         executor.queueEvent( event, args );
     }
 
-    /**
+    /*
      * Queue a task to be run on the main thread, using {@link MainThread}.
      *
      * @param runnable The task to run
      * @return If the task was successfully queued (namely, whether there is space on it).
      */
+    /*
     public boolean queueMainThread( Runnable runnable )
     {
         return serverExecutor.enqueue( runnable );
     }
+    */
 
     public IWorkMonitor getMainThreadMonitor()
     {
-        return serverExecutor;
+        return null;
     }
 
     public int getID()
@@ -159,7 +159,7 @@
         if( !Objects.equal( label, this.label ) )
         {
             this.label = label;
-            externalOutputChanged.set( true );
+            externalOutputChanged = true;
         }
     }
 
@@ -184,7 +184,7 @@
         internalEnvironment.tick();
 
         // Propagate the environment's output to the world.
-        if( internalEnvironment.updateOutput() ) externalOutputChanged.set( true );
+        if( internalEnvironment.updateOutput() ) externalOutputChanged = true;
 
         // Set output changed if the terminal has changed from blinking to not
         boolean blinking = terminal.getCursorBlink() &&
@@ -193,18 +193,20 @@
         if( blinking != this.blinking )
         {
             this.blinking = blinking;
-            externalOutputChanged.set( true );
+            externalOutputChanged = true;
         }
     }
 
     void markChanged()
     {
-        externalOutputChanged.set( true );
+        externalOutputChanged = true;
     }
 
     public boolean pollAndResetChanged()
     {
-        return externalOutputChanged.getAndSet( false );
+        boolean changed = externalOutputChanged;
+        externalOutputChanged = false;
+        return changed;
     }
 
     public boolean isBlinking()
